"use client";

import { useState } from "react";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { UserButton } from "@clerk/nextjs";

interface MenuItem {
  name: string;
  href: string;
  icon: string;
  description?: string;
}

export default function DashboardLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  const menuItems: MenuItem[] = [
    {
      name: "„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ",
      href: "/dashboard",
      icon: "üìä",
      description: "Ê¶ÇË¶Å„Å®„É¨„Éù„Éº„Éà",
    },
    {
      name: "ÂèéÂÖ•ÁÆ°ÁêÜ",
      href: "/dashboard/incomes",
      icon: "üí∞",
      description: "ÂèéÂÖ•„ÅÆ‰∏ÄË¶ß„Å®ÁÆ°ÁêÜ",
    },
    {
      name: "ÁµåË≤ªÁÆ°ÁêÜ",
      href: "/dashboard/expenses",
      icon: "üí≥",
      description: "ÁµåË≤ª„ÅÆ‰∏ÄË¶ß„Å®ÁÆ°ÁêÜ",
    },
    {
      name: "Êñ∞Ë¶èÂèéÂÖ•ÁôªÈå≤",
      href: "/dashboard/incomes/new",
      icon: "‚ûï",
      description: "ÂèéÂÖ•„ÇíËøΩÂä†",
    },
    {
      name: "Êñ∞Ë¶èÁµåË≤ªÁôªÈå≤",
      href: "/dashboard/expenses/new",
      icon: "üì∏",
      description: "„É¨„Ç∑„Éº„Éà„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ",
    },
  ];

  const isActive = (href: string) => {
    if (href === "/dashboard") {
      return pathname === href;
    }
    return pathname.startsWith(href);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* „Éò„ÉÉ„ÉÄ„Éº */}
      <header className="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-40">
        <div className="px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center">
              {/* „É¢„Éê„Ç§„É´„É°„Éã„É•„Éº„Éú„Çø„É≥ */}
              <button
                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
                className="md:hidden p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100"
              >
                <svg
                  className="h-6 w-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  {isMobileMenuOpen ? (
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M6 18L18 6M6 6l12 12"
                    />
                  ) : (
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M4 6h16M4 12h16M4 18h16"
                    />
                  )}
                </svg>
              </button>

              {/* „É≠„Ç¥ */}
              <Link href="/dashboard" className="flex items-center ml-4 md:ml-0">
                <span className="text-2xl mr-2">üí¥</span>
                <h1 className="text-xl font-semibold text-gray-900">Receiptant</h1>
              </Link>
            </div>

            {/* „Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ */}
            <nav className="hidden md:flex items-center space-x-1">
              {menuItems.slice(0, 3).map((item) => (
                <Link
                  key={item.href}
                  href={item.href}
                  className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                    isActive(item.href)
                      ? "bg-blue-100 text-blue-700"
                      : "text-gray-600 hover:text-gray-900 hover:bg-gray-100"
                  }`}
                >
                  <span className="mr-1">{item.icon}</span>
                  {item.name}
                </Link>
              ))}
            </nav>

            {/* Âè≥ÂÅ¥„ÅÆ„Ç¢„ÇØ„Ç∑„Éß„É≥ */}
            <div className="flex items-center space-x-4">
              {/* „ÇØ„Ç§„ÉÉ„ÇØ„Ç¢„ÇØ„Ç∑„Éß„É≥ */}
              <div className="hidden md:flex items-center space-x-2">
                <Link
                  href="/dashboard/incomes/new"
                  className="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 transition-colors"
                >
                  <span className="mr-1">‚ûï</span>
                  ÂèéÂÖ•ËøΩÂä†
                </Link>
                <Link
                  href="/dashboard/expenses/new"
                  className="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 transition-colors"
                >
                  <span className="mr-1">üì∏</span>
                  ÁµåË≤ªËøΩÂä†
                </Link>
              </div>
              
              <UserButton afterSignOutUrl="/" />
            </div>
          </div>
        </div>
      </header>

      {/* „É¢„Éê„Ç§„É´„É°„Éã„É•„Éº */}
      {isMobileMenuOpen && (
        <div className="md:hidden fixed inset-0 z-30 bg-gray-600 bg-opacity-75" onClick={() => setIsMobileMenuOpen(false)}>
          <div
            className="fixed inset-y-0 left-0 max-w-xs w-full bg-white shadow-xl"
            onClick={(e) => e.stopPropagation()}
          >
            <div className="p-6">
              <div className="flex items-center justify-between mb-8">
                <h2 className="text-lg font-semibold text-gray-900">„É°„Éã„É•„Éº</h2>
                <button
                  onClick={() => setIsMobileMenuOpen(false)}
                  className="p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100"
                >
                  <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
              
              <nav className="space-y-1">
                {menuItems.map((item) => (
                  <Link
                    key={item.href}
                    href={item.href}
                    onClick={() => setIsMobileMenuOpen(false)}
                    className={`flex items-start px-3 py-3 rounded-md transition-colors ${
                      isActive(item.href)
                        ? "bg-blue-100 text-blue-700"
                        : "text-gray-700 hover:text-gray-900 hover:bg-gray-100"
                    }`}
                  >
                    <span className="text-xl mr-3">{item.icon}</span>
                    <div>
                      <div className="font-medium">{item.name}</div>
                      {item.description && (
                        <div className="text-sm text-gray-500">{item.description}</div>
                      )}
                    </div>
                  </Link>
                ))}
              </nav>
            </div>
          </div>
        </div>
      )}

      {/* „Çµ„Ç§„Éâ„Éê„Éº + „É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑÔºà„Éá„Çπ„ÇØ„Éà„ÉÉ„ÉóÔºâ */}
      <div className="flex">
        {/* „Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Çµ„Ç§„Éâ„Éê„Éº */}
        <aside className="hidden lg:block w-64 bg-white border-r border-gray-200">
          <div className="h-full px-4 py-6">
            <nav className="space-y-1">
              {menuItems.map((item) => (
                <Link
                  key={item.href}
                  href={item.href}
                  className={`flex items-center px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                    isActive(item.href)
                      ? "bg-blue-100 text-blue-700"
                      : "text-gray-700 hover:text-gray-900 hover:bg-gray-100"
                  }`}
                >
                  <span className="text-lg mr-3">{item.icon}</span>
                  <span>{item.name}</span>
                </Link>
              ))}
            </nav>

            {/* „Çµ„Ç§„Éâ„Éê„Éº‰∏ãÈÉ®„ÅÆÁµ±Ë®àÊÉÖÂ†± */}
            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <h3 className="text-sm font-medium text-gray-700 mb-3">„ÇØ„Ç§„ÉÉ„ÇØÁµ±Ë®à</h3>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span className="text-gray-600">‰ªäÊúà„ÅÆÂèéÊîØ</span>
                  <span className="font-medium text-gray-900">Ë®àÁÆó‰∏≠...</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">Êú™Âá¶ÁêÜ</span>
                  <span className="font-medium text-gray-900">0‰ª∂</span>
                </div>
              </div>
            </div>
          </div>
        </aside>

        {/* „É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑ */}
        <main className="flex-1 min-h-[calc(100vh-4rem)]">
          {children}
        </main>
      </div>
    </div>
  );
}